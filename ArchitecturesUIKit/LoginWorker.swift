//
//  LoginWorker.swift
//  ArchitecturesUIKit
//
//  Created by Frédéric Helfer on 14/02/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum ValidationError: Error {
    case textFieldEmpty
    case emailInvalid
    case passwordNotEqual
}

extension ValidationError: LocalizedError {
    var errorDescription: String? {
        switch self {
        case .textFieldEmpty:
            return NSLocalizedString("TextField is empty", comment: "")
        case .emailInvalid:
            return NSLocalizedString("Email invalid. Try again!", comment: "")
        case .passwordNotEqual:
            return NSLocalizedString("Passwords are not equal. Try again!", comment: "")
        }
    }
}

class LoginWorker
{
    public func login(user: Credentials, completionHandler: @escaping(Result<Credentials, Error>) -> ()) {
        if user.password == "" || user.email == "" {
            completionHandler(.failure(ValidationError.textFieldEmpty))
        } else if !user.email.contains("@") {
            completionHandler(.failure(ValidationError.emailInvalid))
        }
        
        CredentialService.shared.signIn(user: user) { result in
            switch result {
            case .success(_):
                completionHandler(.success(user))
            case .failure(let error):
                completionHandler(.failure(error))
            }
        }
    }
}
